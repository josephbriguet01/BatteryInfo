; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define DistDir "{dist.dir}"
#define AppVendor "{application.vendor}"
#define MyAppName "{application.title}"
#define MyAppVersion "{version.code.simple}"
#define MyAppPublisher "{application.vendor}"
#define MyAppExeName "{application.title}.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{D32E002B-8B21-4571-A1DF-A97D2EE3960A}
AppName={#MyAppName}
AppVersion=v{#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppCopyright=Copyright (C) {year} - {#AppVendor}, All rights reserved.
VersionInfoVersion={version.code.expert}
DefaultDirName={commonpf64}\{#MyAppName}
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
LicenseFile=licence.txt
OutputDir=bin
OutputBaseFilename={#MyAppName}-v{#MyAppVersion}-installer
SetupIconFile={app.ico}
Compression=lzma
SolidCompression=yes
PrivilegesRequired=admin

[Types]
Name: "full"; Description: "Full installation"
Name: "custom"; Description: "Custom installation"; Flags: iscustom

[Components]
Name: "ShowBatteryPlugin"; Description: "Base"; Types: full custom; Flags: fixed
Name: "SwitchBatteryPlugin"; Description: "Shelly Plug S Plugin"; Types: full

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "french"; MessagesFile: "compiler:Languages\French.isl"

[Dirs]
Name: "{app}\lib";
Name: "{app}\plugins";
Name: "{localappdata}\{#MyAppName}";

[Files]
Source: "java16.exe"; DestDir: "{tmp}"; Check: NeedInstalljava
Source: "{#DistDir}\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "{#DistDir}\lib\Plugin.jar"; DestDir: "{app}\lib"; Flags: ignoreversion
Source: "{#DistDir}\lib\Plugin-javadoc.zip"; DestDir: "{app}\lib"; Flags: ignoreversion
Source: "{#DistDir}\plugins\ShowBatteryPlugin.jar"; DestDir: "{app}\plugins"; Flags: ignoreversion; Components: ShowBatteryPlugin
Source: "{#DistDir}\plugins\SwitchBatteryPlugin.jar"; DestDir: "{app}\plugins"; Flags: ignoreversion; Components: SwitchBatteryPlugin
Source: "{#DistDir}\Off.exe"; DestDir: "{app}"; Flags: ignoreversion; Components: SwitchBatteryPlugin
Source: "{#DistDir}\On.exe"; DestDir: "{app}"; Flags: ignoreversion; Components: SwitchBatteryPlugin
Source: "{#DistDir}\Stop.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "battery.json"; DestDir: "{localappdata}\{#MyAppName}"; Flags: ignoreversion
Source: "ip_plug.txt"; DestDir: "{localappdata}\{#MyAppName}"; Flags: ignoreversion; Components: SwitchBatteryPlugin

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
Root: HKCU; Subkey: "Software\Microsoft\Windows\CurrentVersion\Run"; ValueType: string; ValueName: "{#MyAppName}"; ValueData: """{app}\{#MyAppExeName}"" startup"; Flags: uninsdeletevalue

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\On (Shelly Plug S)"; Filename: "{app}\On.exe"; Components: SwitchBatteryPlugin
Name: "{group}\Off (Shelly Plug S)"; Filename: "{app}\Off.exe"; Components: SwitchBatteryPlugin
Name: "{group}\Stop {#MyAppName}"; Filename: "{app}\Stop.exe"
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"

[Run]
Filename: {tmp}\java16.exe; Parameters: "/lang=1036 /s /v""/qb! IEXPLORER=1 MOZILLA=1 REBOOT=Suppress JAVAUPDATE=0 WEBSTARTICON=0 SYSTRAY=0"""; WorkingDir: {tmp}; Flags: skipifdoesntexist; Check: NeedInstalljava
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[CODE]
var
java : boolean ;
function InitializeSetup(): Boolean;
Var
  Versjava : string;
Begin
  result := true;
  // recherche dans la BDR la version de java installé
  if (RegQueryStringValue(HKLM, 'SOFTWARE\JavaSoft\Java Runtime Environment', 'CurrentVersion', Versjava) = true) then
      begin
         // si la version installée est inf ou = à v1.5 on install la v1.6
         if CompareStr(Versjava,'1.5') < 0  then
           java := true;
      end;
end;
 
 
function NeedInstalljava(): Boolean;
 begin
    Result := java;
 end;