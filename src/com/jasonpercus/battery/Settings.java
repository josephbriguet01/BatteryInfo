/*
 * Copyright (C) JasonPercus Systems, Inc - All Rights Reserved
 *
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 *
 * Written by JasonPercus, January 2021
 */
package com.jasonpercus.battery;



/**
 * Cette classe permet de modifier les paramètres de l'application
 * @author JasonPercus
 * @version 1.0
 */
class Settings extends javax.swing.JFrame {

    
    
//ATTRIBUTS
    /**
     * Correspond à l'icône de l'application
     */
    private final java.awt.Image iconApp;
    
    /**
     * Correspond au slider
     */
    private final RangeSlider slider;
    
    
    
//CONSTRUCTOR
    /**
     * Crée la fenêtre {@link Settings}
     * @param iconApp Correspond à l'icône de l'application
     */
    public Settings(java.awt.Image iconApp) {
        this.iconApp = iconApp;
        initComponents();
        this.slider = new RangeSlider(0, 100);
        this.slider.setValue(BatteryInfo.properties.percentMin);
        this.slider.setUpperValue(BatteryInfo.properties.percentMax);
        minLabel.setText("Min value: " + BatteryInfo.properties.percentMin + " %");
        maxLabel.setText("Max value: " + BatteryInfo.properties.percentMax + " %");
        pane.add(this.slider);
        this.slider.addChangeListener((javax.swing.event.ChangeEvent e) -> {
            minLabel.setText("Min value: " + slider.getValue() + " %");
            maxLabel.setText("Max value: " + slider.getUpperValue() + " %");
        });
        this.slider.setFocusable(false);
    }
    
    
    
//METHODE PUBLIC
    /**
     * Ferme la fenêtre
     */
    @Override
    public void dispose(){
        BatteryInfo.properties.percentMin = slider.getValue();
        BatteryInfo.properties.percentMax = slider.getUpperValue();
        BatteryInfo.saveProperties();
        super.dispose();
    }

    
    
//METHODE PRIVATE
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        minLabel = new javax.swing.JLabel();
        maxLabel = new javax.swing.JLabel();
        pane = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Settings");
        setIconImage(this.iconApp);
        setResizable(false);

        minLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        minLabel.setForeground(new java.awt.Color(0, 204, 255));
        minLabel.setText("Min value: ");

        maxLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        maxLabel.setForeground(new java.awt.Color(255, 0, 0));
        maxLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        maxLabel.setText("Max value:");

        pane.setMinimumSize(new java.awt.Dimension(400, 100));
        pane.setPreferredSize(new java.awt.Dimension(400, 100));
        pane.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(minLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(maxLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minLabel)
                    .addComponent(maxLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pane, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel maxLabel;
    private javax.swing.JLabel minLabel;
    private javax.swing.JPanel pane;
    // End of variables declaration//GEN-END:variables



}